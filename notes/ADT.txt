Application of Structures:
Structures are fundamental building blocks in programming. They allow you to group related data elements together. One common application of structures is creating abstract data types (ADTs) that represent specific behaviors. Hereâ€™s an example:

ADT: List
A list is a collection of elements of the same type arranged in a sequential order.
Lists can be used for various purposes, such as storing integers, characters, payroll records, or even other lists.

Key properties of a list:
    Empty List: A list is considered empty when it contains no elements.
    Length: The number of elements currently stored in the list.

Operations associated with the list ADT:
    get(): Returns an element from the list at any given position.

    insert(): Inserts an element at any position in the list.

    remove(): Removes the first occurrence of any element from a non-empty list.

    removeAt(): Removes the element at a specified location from a non-empty list.

    replace(): Replaces an element at any position with another element.

    size(): Returns the number of elements in the list.

    isEmpty(): Returns true if the list is empty; otherwise, returns false.

    isFull(): Returns true if the list is full; otherwise, returns false.

Operations of the List ADT:
    get(): Retrieves an element from the list at a specific position.
    insert(): Adds an element at any position within the list.
    remove(): Deletes the first occurrence of a specified element from a non-empty list.